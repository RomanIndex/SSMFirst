<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.admin.entity.xml.SsmRoleMapper" >
  <resultMap id="BaseResultMap" type="com.ssm.admin.entity.SsmRole" >
    <result column="ID" property="id" jdbcType="VARCHAR" />
    <result column="ROLE_ID" property="roleId" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="DECIMAL" />
    <result column="ROLE_LEVEL" property="roleLevel" jdbcType="DECIMAL" />
    <result column="WEIGHT" property="weight" jdbcType="DECIMAL" />
    <result column="PRI_VALUES" property="priValues" jdbcType="DECIMAL" />
    <result column="STATUS" property="status" jdbcType="DECIMAL" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="DESCRIBE" property="describe" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, ROLE_ID, NAME, TYPE, ROLE_LEVEL, WEIGHT, PRI_VALUES, STATUS, CREATE_TIME, DESCRIBE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ssm.admin.entity.SsmRoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SSM_ROLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ssm.admin.entity.SsmRoleExample" >
    delete from SSM_ROLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.admin.entity.SsmRole" >
    insert into SSM_ROLE (ID, ROLE_ID, NAME, 
      TYPE, ROLE_LEVEL, WEIGHT, 
      PRI_VALUES, STATUS, CREATE_TIME, 
      DESCRIBE)
    values (#{id,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{type,jdbcType=DECIMAL}, #{roleLevel,jdbcType=DECIMAL}, #{weight,jdbcType=DECIMAL}, 
      #{priValues,jdbcType=DECIMAL}, #{status,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{describe,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.admin.entity.SsmRole" >
    insert into SSM_ROLE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="roleId != null" >
        ROLE_ID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="roleLevel != null" >
        ROLE_LEVEL,
      </if>
      <if test="weight != null" >
        WEIGHT,
      </if>
      <if test="priValues != null" >
        PRI_VALUES,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="describe != null" >
        DESCRIBE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=DECIMAL},
      </if>
      <if test="roleLevel != null" >
        #{roleLevel,jdbcType=DECIMAL},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=DECIMAL},
      </if>
      <if test="priValues != null" >
        #{priValues,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="describe != null" >
        #{describe,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.admin.entity.SsmRoleExample" resultType="java.lang.Integer" >
    select count(*) from SSM_ROLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update SSM_ROLE
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null" >
        ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        TYPE = #{record.type,jdbcType=DECIMAL},
      </if>
      <if test="record.roleLevel != null" >
        ROLE_LEVEL = #{record.roleLevel,jdbcType=DECIMAL},
      </if>
      <if test="record.weight != null" >
        WEIGHT = #{record.weight,jdbcType=DECIMAL},
      </if>
      <if test="record.priValues != null" >
        PRI_VALUES = #{record.priValues,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.describe != null" >
        DESCRIBE = #{record.describe,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update SSM_ROLE
    set ID = #{record.id,jdbcType=VARCHAR},
      ROLE_ID = #{record.roleId,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      TYPE = #{record.type,jdbcType=DECIMAL},
      ROLE_LEVEL = #{record.roleLevel,jdbcType=DECIMAL},
      WEIGHT = #{record.weight,jdbcType=DECIMAL},
      PRI_VALUES = #{record.priValues,jdbcType=DECIMAL},
      STATUS = #{record.status,jdbcType=DECIMAL},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      DESCRIBE = #{record.describe,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>